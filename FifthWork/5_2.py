import numpy as np
import sympy as sp

print("문제 (a)")
A = sp.Matrix([[1, -4, 1], [3, 2, 3], [1, 1, 3]])
print("A = ", A)
lamda = sp.symbols('lamda')
p_A = A.charpoly(lamda)
print("\n")
print("A의 특성다항식 : \n",p_A)
print("\n")
print("특성다항식의 영이 아닌 계수들 : ", p_A.coeffs())

A2 = np.matmul(A, A)
A3 = np.matmul(A, A2)
char_coeff = p_A.coeffs()
print("\n")
print("p_A(A) = ",char_coeff[0]*A3 + char_coeff[1]*A2 + char_coeff[2]*A + char_coeff[3]*np.eye(3))
print("\n")

print("문제 (b)")
B = sp.Matrix([[0, 1, 0, 1], [1, 0, 1, 0], [0, 1, 0, 1], [1, 0, 1, 0]])
print("B = ", B)
lamda = sp.symbols('lamda')
p_B = B.charpoly(lamda)
print("\n")
print("B의 특성다항식 : \n", p_B)
print("\n")
print("특성다항식의 영이 아닌 계수들 : ", p_B.coeffs())

B2 = np.matmul(B, B)
B3 = np.matmul(B, B2)
B4 = np.matmul(B, B3)
char_coeff = p_B.coeffs()
print("\n")
print("p_B(B) = \n", char_coeff[0]*B4 + char_coeff[1]*B2 )
print("\n")

print("문제 (c)")
C = sp.Matrix([[2, -1, 0, -1], [-1, 2, -1, 0], [0, -1, 2, -1], [-1, 0, -1, 2]])
print("C = ", C)
lamda = sp.symbols('lamda')
p_C = C.charpoly(lamda)
print("\n")
print("C의 특성다항식 : \n", p_C)
print("\n")
print("특성다항식의 영이 아닌 계수들 : ", p_C.coeffs())

C2 = np.matmul(C, C)
C3 = np.matmul(C, C2)
C4 = np.matmul(C, C3)
char_coeff = p_C.coeffs()
print("\n")
print("p_C(C) = \n",char_coeff[0]*C4 + char_coeff[1]*C3 +char_coeff[2]*C2 + char_coeff[3]*C)